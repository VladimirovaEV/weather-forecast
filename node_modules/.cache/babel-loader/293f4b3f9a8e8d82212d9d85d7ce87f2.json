{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\weather-forecast\\\\src\\\\components\\\\weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { REACT_APP_API_URL, REACT_APP_API_KEY, REACT_APP_ICON_URL } from \"../utils/openWeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  //     const [lat, setLat] = useState([]);\n  //   const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(result => {\n        setData(result);\n        console.log(result);\n      });\n    };\n\n    fetchData();\n  }, [lat, long]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Weather\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Weather, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","REACT_APP_API_URL","REACT_APP_API_KEY","REACT_APP_ICON_URL","Weather","data","setData","fetchData","navigator","geolocation","getCurrentPosition","position","setLat","coords","latitude","setLong","longitude","fetch","process","env","lat","long","then","res","json","result","console","log"],"sources":["C:/Users/Admin/weather-forecast/src/components/weather.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { REACT_APP_API_URL, REACT_APP_API_KEY, REACT_APP_ICON_URL } from \"../utils/openWeatherInfo\";\r\n\r\nconst Weather = () => {\r\n//     const [lat, setLat] = useState([]);\r\n//   const [long, setLong] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        setLat(position.coords.latitude);\r\n        setLong(position.coords.longitude);\r\n      });\r\n\r\n      await fetch(`${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setData(result)\r\n        console.log(result);\r\n      });\r\n    }\r\n    fetchData();\r\n  }, [lat,long])\r\n\r\n    return (\r\n        <div>Weather</div>\r\n    )\r\n}\r\n\r\nexport default Weather;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,kBAA/C,QAAyE,0BAAzE;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACtB;EACA;EACE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,YAAY;MAC5BC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;QAC1DC,MAAM,CAACD,QAAQ,CAACE,MAAT,CAAgBC,QAAjB,CAAN;QACAC,OAAO,CAACJ,QAAQ,CAACE,MAAT,CAAgBG,SAAjB,CAAP;MACD,CAHD;MAKA,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYlB,iBAAkB,iBAAgBmB,GAAI,QAAOC,IAAK,uBAAsBH,OAAO,CAACC,GAAR,CAAYjB,iBAAkB,EAAtH,CAAL,CACLoB,IADK,CACAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADP,EAELF,IAFK,CAEAG,MAAM,IAAI;QACdnB,OAAO,CAACmB,MAAD,CAAP;QACAC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACD,CALK,CAAN;IAMD,CAZD;;IAaAlB,SAAS;EACV,CAfQ,EAeN,CAACa,GAAD,EAAKC,IAAL,CAfM,CAAT;EAiBE,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAzBD;;GAAMjB,O;;KAAAA,O;AA2BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}