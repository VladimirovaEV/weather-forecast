{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\weather-forecast\\\\src\\\\layout\\\\selectedPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport UserProvider from \"../hooks/useUsers\";\nimport { useFavorite } from \"../hooks/useFavorite\";\nimport UseFetch from \"../hooks/useFetch\";\nimport { API_URL, API_KEY } from \"../utils/openWeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectedPage = () => {\n  _s();\n\n  const {\n    favorite\n  } = useFavorite();\n  console.log(favorite);\n  const {\n    data,\n    setUrl\n  } = UseFetch();\n  const [city] = useState(\"Paris\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SelectedPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setUrl(`${API_URL}weather?q=${city}&appid=${API_KEY}&units=metric`),\n        children: \"\\u041F\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelectedPage, \"qefe7WDFsT1JuNNE4NIirEdAUiE=\", false, function () {\n  return [useFavorite];\n});\n\n_c = SelectedPage;\nexport default SelectedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedPage\");","map":{"version":3,"names":["React","useState","UserProvider","useFavorite","UseFetch","API_URL","API_KEY","SelectedPage","favorite","console","log","data","setUrl","city"],"sources":["C:/Users/Admin/weather-forecast/src/layout/selectedPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserProvider from \"../hooks/useUsers\";\r\nimport { useFavorite } from \"../hooks/useFavorite\";\r\nimport UseFetch from \"../hooks/useFetch\";\r\nimport { API_URL, API_KEY } from \"../utils/openWeatherInfo\";\r\n\r\nconst SelectedPage = () => {\r\n    const { favorite } = useFavorite();\r\n    console.log(favorite);\r\n    const { data, setUrl } = UseFetch();\r\n    const [city] = useState(\"Paris\");\r\n    return (\r\n        <>\r\n            <UserProvider>\r\n                <h1>SelectedPage</h1>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={() => setUrl(`${API_URL}weather?q=${city}&appid=${API_KEY}&units=metric`)}\r\n                >\r\n                Посмотреть\r\n                </button>\r\n            </UserProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectedPage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,0BAAjC;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAAeL,WAAW,EAAhC;EACAM,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACA,MAAM;IAAEG,IAAF;IAAQC;EAAR,IAAmBR,QAAQ,EAAjC;EACA,MAAM,CAACS,IAAD,IAASZ,QAAQ,CAAC,OAAD,CAAvB;EACA,oBACI;IAAA,uBACI,QAAC,YAAD;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,IAAI,EAAC,QADT;QAEI,OAAO,EAAE,MAAMW,MAAM,CAAE,GAAEP,OAAQ,aAAYQ,IAAK,UAASP,OAAQ,eAA9C,CAFzB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAaH,CAlBD;;GAAMC,Y;UACmBJ,W;;;KADnBI,Y;AAoBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}