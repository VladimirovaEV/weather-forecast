{"ast":null,"code":"import axios from \"axios\";\nimport configFile from \"../utils/config.json\";\nimport { toast } from \"react-toastify\";\nimport { httpAuth } from \"../hooks/useAuth\";\nimport localStorageService from \"./localStorage.service\";\nconst http = axios.create({\n  baseURL: configFile.apiEndpoint\n});\nhttp.interceptors.request.use(async function (config) {\n  if (configFile.isFireBase) {\n    const containSlash = /\\/$/gi.test(config.url);\n    config.url = (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n    const expiresDate = localStorageService.getTokenExpiresDate();\n    const refreshToken = localStorageService.getRefreshToken();\n\n    if (refreshToken && expiresDate > Date.now()) {\n      const {\n        data\n      } = await httpAuth.post(\"token\", {\n        grant_type: \"refresh_token\",\n        refresh_token: refreshToken\n      });\n      console.log(data);\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\nfunction transformData(data) {\n  return data && !data._id ? Object.keys(data).map(key => ({ ...data[key]\n  })) : data;\n}\n\nhttp.interceptors.response.use(res => {\n  if (configFile.isFireBase) {\n    res.data = {\n      content: transformData(res.data)\n    };\n  }\n\n  return res;\n}, function (error) {\n  const expectedErrors = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedErrors) {\n    console.log(error);\n    toast.error(\"Something was wrong. Try it later\");\n  }\n\n  return Promise.reject(error);\n});\nconst httpService = {\n  get: http.get,\n  post: http.post,\n  put: http.put,\n  delete: http.delete\n};\nexport default httpService;","map":{"version":3,"names":["axios","configFile","toast","httpAuth","localStorageService","http","create","baseURL","apiEndpoint","interceptors","request","use","config","isFireBase","containSlash","test","url","slice","expiresDate","getTokenExpiresDate","refreshToken","getRefreshToken","Date","now","data","post","grant_type","refresh_token","console","log","error","Promise","reject","transformData","_id","Object","keys","map","key","response","res","content","expectedErrors","status","httpService","get","put","delete"],"sources":["C:/Users/Admin/weather-forecast/src/services/http.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport configFile from \"../utils/config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport { httpAuth } from \"../hooks/useAuth\";\r\nimport localStorageService from \"./localStorage.service\"\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndpoint\r\n});\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url = (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n            const expiresDate = localStorageService.getTokenExpiresDate();\r\n            const refreshToken = localStorageService.getRefreshToken();\r\n            if (refreshToken && expiresDate > Date.now()) {\r\n                const { data } = await httpAuth.post(\"token\", {\r\n                    grant_type: \"refresh_token\",\r\n                    refresh_token: refreshToken\r\n                });\r\n                console.log(data);\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nfunction transformData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n            ...data[key]\r\n        }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Something was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete\r\n};\r\n\r\nexport default httpService;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AAEA,MAAMC,IAAI,GAAGL,KAAK,CAACM,MAAN,CAAa;EACtBC,OAAO,EAAEN,UAAU,CAACO;AADE,CAAb,CAAb;AAGAH,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CACI,gBAAgBC,MAAhB,EAAwB;EACpB,IAAIX,UAAU,CAACY,UAAf,EAA2B;IACvB,MAAMC,YAAY,GAAG,QAAQC,IAAR,CAAaH,MAAM,CAACI,GAApB,CAArB;IACAJ,MAAM,CAACI,GAAP,GAAa,CAACF,YAAY,GAAGF,MAAM,CAACI,GAAP,CAAWC,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAH,GAA6BL,MAAM,CAACI,GAAjD,IAAwD,OAArE;IACA,MAAME,WAAW,GAAGd,mBAAmB,CAACe,mBAApB,EAApB;IACA,MAAMC,YAAY,GAAGhB,mBAAmB,CAACiB,eAApB,EAArB;;IACA,IAAID,YAAY,IAAIF,WAAW,GAAGI,IAAI,CAACC,GAAL,EAAlC,EAA8C;MAC1C,MAAM;QAAEC;MAAF,IAAW,MAAMrB,QAAQ,CAACsB,IAAT,CAAc,OAAd,EAAuB;QAC1CC,UAAU,EAAE,eAD8B;QAE1CC,aAAa,EAAEP;MAF2B,CAAvB,CAAvB;MAIAQ,OAAO,CAACC,GAAR,CAAYL,IAAZ;IACH;EACJ;;EACD,OAAOZ,MAAP;AACH,CAhBL,EAiBI,UAAUkB,KAAV,EAAiB;EACb,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAnBL;;AAqBA,SAASG,aAAT,CAAuBT,IAAvB,EAA6B;EACzB,OAAOA,IAAI,IAAI,CAACA,IAAI,CAACU,GAAd,GACDC,MAAM,CAACC,IAAP,CAAYZ,IAAZ,EAAkBa,GAAlB,CAAuBC,GAAD,KAAU,EAC9B,GAAGd,IAAI,CAACc,GAAD;EADuB,CAAV,CAAtB,CADC,GAIDd,IAJN;AAKH;;AACDnB,IAAI,CAACI,YAAL,CAAkB8B,QAAlB,CAA2B5B,GAA3B,CACK6B,GAAD,IAAS;EACL,IAAIvC,UAAU,CAACY,UAAf,EAA2B;IACvB2B,GAAG,CAAChB,IAAJ,GAAW;MAAEiB,OAAO,EAAER,aAAa,CAACO,GAAG,CAAChB,IAAL;IAAxB,CAAX;EACH;;EACD,OAAOgB,GAAP;AACH,CANL,EAOI,UAAUV,KAAV,EAAiB;EACb,MAAMY,cAAc,GAChBZ,KAAK,CAACS,QAAN,IACAT,KAAK,CAACS,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAb,KAAK,CAACS,QAAN,CAAeI,MAAf,GAAwB,GAH5B;;EAIA,IAAI,CAACD,cAAL,EAAqB;IACjBd,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACA5B,KAAK,CAAC4B,KAAN,CAAY,mCAAZ;EACH;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAjBL;AAmBA,MAAMc,WAAW,GAAG;EAChBC,GAAG,EAAExC,IAAI,CAACwC,GADM;EAEhBpB,IAAI,EAAEpB,IAAI,CAACoB,IAFK;EAGhBqB,GAAG,EAAEzC,IAAI,CAACyC,GAHM;EAIhBC,MAAM,EAAE1C,IAAI,CAAC0C;AAJG,CAApB;AAOA,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}