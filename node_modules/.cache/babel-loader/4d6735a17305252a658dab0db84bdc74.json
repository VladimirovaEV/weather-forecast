{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\weather-forecast\\\\src\\\\hooks\\\\useAuth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\nimport { setTokens } from \"../services/localStorage.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpAuth = axios;\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst AuthProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setUser] = useState({});\n  const [error, setError] = useState(null);\n\n  async function signUp(_ref2) {\n    let {\n      email,\n      password,\n      ...rest\n    } = _ref2;\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`;\n\n    try {\n      const {\n        data\n      } = await httpAuth.post(url, {\n        email,\n        password,\n        returnSecureToken: true\n      });\n      setTokens(data);\n      await createUser({\n        _id: data.localId,\n        email,\n        ...rest\n      });\n      console.log(data);\n    } catch (error) {\n      errorCatcher(error);\n      const {\n        code,\n        message\n      } = error.responce.data.error;\n      console.log(code, message);\n\n      if (code === 400) {\n        if (message === \"EMAIL_EXISTS\") {\n          const errorObject = {\n            email: \"Пользователь с таким Email уже существует\"\n          };\n          throw errorObject;\n        }\n      }\n    }\n  }\n\n  async function createUser(data) {\n    try {\n      const {\n        content\n      } = userService.create(data);\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.responce.data;\n    setError(message);\n  }\n\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signUp,\n      currentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"eHdUE3YM8T8lhXhD9NPq1nJ4Lu8=\");\n\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","PropTypes","axios","userService","toast","setTokens","httpAuth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setUser","error","setError","signUp","email","password","rest","url","process","env","REACT_APP_FIREBASE_KEY","data","post","returnSecureToken","createUser","_id","localId","console","log","errorCatcher","code","message","responce","errorObject","content","create","propTypes","oneOfType","arrayOf","node"],"sources":["C:/Users/Admin/weather-forecast/src/hooks/useAuth.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport userService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setTokens } from \"../services/localStorage.service\";\r\n\r\nconst httpAuth = axios\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [currentUser, setUser] = useState({});\r\n    const [error, setError] = useState(null);\r\n\r\n    async function signUp({ email, password, ...rest }) {\r\n        const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                returnSecureToken: true\r\n            });\r\n            setTokens(data);\r\n\r\n            await createUser({ _id: data.localId, email, ...rest });\r\n            console.log(data);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.responce.data.error;\r\n            console.log(code, message);\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_EXISTS\") {\r\n                    const errorObject = {\r\n                        email: \"Пользователь с таким Email уже существует\"\r\n                    };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async function createUser(data) {\r\n        try {\r\n            const { content } = userService.create(data);\r\n            setUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.responce.data;\r\n        setError(message);\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    return (\r\n        <AuthContext.Provider value = {{ signUp, currentUser }}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}