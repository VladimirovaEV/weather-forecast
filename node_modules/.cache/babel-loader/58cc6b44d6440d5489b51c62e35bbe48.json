{"ast":null,"code":"const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nexport function setTokens(_ref) {\n  let {\n    refreshToken,\n    idToken,\n    expiresIn = 3600\n  } = _ref;\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(TOKEN_KEY, idToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\n;\nconst localStorageService = {\n  setTokens\n};\nexport default localStorageService;","map":{"version":3,"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","setTokens","refreshToken","idToken","expiresIn","expiresDate","Date","getTime","localStorage","setItem","localStorageService"],"sources":["C:/Users/Admin/weather-forecast/src/services/localStorage.service.js"],"sourcesContent":["const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\n\r\nexport function setTokens({ refreshToken, idToken, expiresIn = 3600 }) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(TOKEN_KEY, idToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n};\r\n\r\n\r\nconst localStorageService = {\r\n    setTokens\r\n};\r\n\r\nexport default localStorageService;\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,OAAO,SAASC,SAAT,OAAgE;EAAA,IAA7C;IAAEC,YAAF;IAAgBC,OAAhB;IAAyBC,SAAS,GAAG;EAArC,CAA6C;EACnE,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuBH,SAAS,GAAG,IAAvD;EACAI,YAAY,CAACC,OAAb,CAAqBX,SAArB,EAAgCK,OAAhC;EACAK,YAAY,CAACC,OAAb,CAAqBV,WAArB,EAAkCG,YAAlC;EACAM,YAAY,CAACC,OAAb,CAAqBT,WAArB,EAAkCK,WAAlC;AACH;AAAA;AAGD,MAAMK,mBAAmB,GAAG;EACxBT;AADwB,CAA5B;AAIA,eAAeS,mBAAf"},"metadata":{},"sourceType":"module"}