{"ast":null,"code":"import axios from \"axios\";\naxios.interceptors.response.use(res => res, function (error) {\n  const expectedErrors = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedErrors) {\n    console.log(\"Unexpected error\");\n  }\n\n  return Promise.reject(error);\n});\nconst httpService = {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete\n};\nexport default httpService;","map":{"version":3,"names":["axios","interceptors","response","use","res","error","expectedErrors","status","console","log","Promise","reject","httpService","get","post","put","delete"],"sources":["C:/Users/Admin/weather-forecast/src/services/http.service.js"],"sourcesContent":["import axios from \"axios\";\r\naxios.interceptors.response.use(\r\n    (res) => res,\r\n    function (error) {\r\n        const expectedErrors =\r\n        error.response &&\r\n        error.response.status >= 400 &&\r\n        error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(\"Unexpected error\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,delete: axios.delete,\r\n};\r\n\r\nexport default httpService;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACKC,GAAD,IAASA,GADb,EAEI,UAAUC,KAAV,EAAiB;EACb,MAAMC,cAAc,GACpBD,KAAK,CAACH,QAAN,IACAG,KAAK,CAACH,QAAN,CAAeK,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACH,QAAN,CAAeK,MAAf,GAAwB,GAHxB;;EAIA,IAAI,CAACD,cAAL,EAAqB;IACjBE,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACH;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACH,CAXL;AAaA,MAAMO,WAAW,GAAG;EAChBC,GAAG,EAAEb,KAAK,CAACa,GADK;EAEhBC,IAAI,EAAEd,KAAK,CAACc,IAFI;EAGhBC,GAAG,EAAEf,KAAK,CAACe,GAHK;EAGDC,MAAM,EAAEhB,KAAK,CAACgB;AAHb,CAApB;AAMA,eAAeJ,WAAf"},"metadata":{},"sourceType":"module"}