{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\weather-forecast\\\\src\\\\components\\\\registerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TextField from \"../components/form/textField\";\nimport { validator } from \"../utils/validator\";\nimport useAuth from \"../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const [data, setData] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  }); // const { signUp } = useAuth();\n\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\"\n      },\n      min: {\n        message: \"Имя должно состоять минимум из 3 символов\",\n        value: 3\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одну цифру\"\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return; // const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\n    // dispatch(signUp(newData));\n\n    console.log(data);\n    signUp(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u0418\\u043C\\u044F\",\n      name: \"name\",\n      value: data.name,\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary w-100 mx-auto\",\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"gtoBYtG/CPBPM6kcLgo6+fkA3sw=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","validator","useAuth","RegisterForm","data","setData","email","name","password","errors","setErrors","handleChange","target","prevState","value","validatorConfig","isRequired","message","isEmail","min","isCapitalSymbol","isContainDigit","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","console","log","signUp"],"sources":["C:/Users/Admin/weather-forecast/src/components/registerForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"../components/form/textField\";\r\nimport { validator } from \"../utils/validator\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nconst RegisterForm = () => {\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        password: \"\"\r\n    });\r\n    // const { signUp } = useAuth();\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Имя обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Имя должно состоять минимум из 3 символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одну цифру\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        // const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\r\n        // dispatch(signUp(newData));\r\n        console.log(data);\r\n        signUp(data);\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={ data.email }\r\n                onChange={ handleChange }\r\n                error = {errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Имя\"\r\n                name=\"name\"\r\n                value={ data.name }\r\n                onChange={ handleChange }\r\n                error = {errors.name}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={ data.password }\r\n                onChange={ handleChange }\r\n                error = {errors.password}\r\n            />\r\n            <button type=\"submit\"\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n                disabled={!isValid}\r\n            >\r\n                        Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;IAC7BQ,KAAK,EAAE,EADsB;IAE7BC,IAAI,EAAE,EAFuB;IAG7BC,QAAQ,EAAE;EAHmB,CAAD,CAAhC,CADuB,CAMvB;;EAEA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;EACA,MAAMa,YAAY,GAAIC,MAAD,IAAY;IAC7BP,OAAO,CAAEQ,SAAD,KAAgB,EACpB,GAAGA,SADiB;MAEpB,CAACD,MAAM,CAACL,IAAR,GAAeK,MAAM,CAACE;IAFF,CAAhB,CAAD,CAAP;EAIH,CALD;;EAMA,MAAMC,eAAe,GAAG;IACpBT,KAAK,EAAE;MACHU,UAAU,EAAE;QACRC,OAAO,EAAE;MADD,CADT;MAIHC,OAAO,EAAE;QACLD,OAAO,EAAE;MADJ;IAJN,CADa;IASpBV,IAAI,EAAE;MACFS,UAAU,EAAE;QACRC,OAAO,EAAE;MADD,CADV;MAIFE,GAAG,EAAE;QACDF,OAAO,EAAE,2CADR;QAEDH,KAAK,EAAE;MAFN;IAJH,CATc;IAkBpBN,QAAQ,EAAE;MACNQ,UAAU,EAAE;QACRC,OAAO,EAAE;MADD,CADN;MAING,eAAe,EAAE;QACbH,OAAO,EAAE;MADI,CAJX;MAONI,cAAc,EAAE;QACZJ,OAAO,EAAE;MADG,CAPV;MAUNE,GAAG,EAAE;QACDF,OAAO,EAAE,8CADR;QAEDH,KAAK,EAAE;MAFN;IAVC;EAlBU,CAAxB;EAkCAf,SAAS,CAAC,MAAM;IACZuB,QAAQ;EACX,CAFQ,EAEN,CAAClB,IAAD,CAFM,CAAT;;EAGA,MAAMkB,QAAQ,GAAG,MAAM;IACnB,MAAMb,MAAM,GAAGR,SAAS,CAACG,IAAD,EAAOW,eAAP,CAAxB;IACAL,SAAS,CAACD,MAAD,CAAT;IACA,OAAOc,MAAM,CAACC,IAAP,CAAYf,MAAZ,EAAoBgB,MAApB,KAA+B,CAAtC;EACH,CAJD;;EAKA,MAAMC,OAAO,GAAGH,MAAM,CAACC,IAAP,CAAYf,MAAZ,EAAoBgB,MAApB,KAA+B,CAA/C;;EAEA,MAAME,YAAY,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;IACA,MAAMH,OAAO,GAAGJ,QAAQ,EAAxB;IACA,IAAI,CAACI,OAAL,EAAc,OAHU,CAIxB;IACA;;IACAI,OAAO,CAACC,GAAR,CAAY3B,IAAZ;IACA4B,MAAM,CAAC5B,IAAD,CAAN;EACH,CARD;;EASA,oBACI;IAAM,QAAQ,EAAEuB,YAAhB;IAAA,wBACI,QAAC,SAAD;MACI,KAAK,EAAC,mGADV;MAEI,IAAI,EAAC,OAFT;MAGI,KAAK,EAAGvB,IAAI,CAACE,KAHjB;MAII,QAAQ,EAAGK,YAJf;MAKI,KAAK,EAAIF,MAAM,CAACH;IALpB;MAAA;MAAA;MAAA;IAAA,QADJ,eAQI,QAAC,SAAD;MACI,KAAK,EAAC,oBADV;MAEI,IAAI,EAAC,MAFT;MAGI,KAAK,EAAGF,IAAI,CAACG,IAHjB;MAII,QAAQ,EAAGI,YAJf;MAKI,KAAK,EAAIF,MAAM,CAACF;IALpB;MAAA;MAAA;MAAA;IAAA,QARJ,eAeI,QAAC,SAAD;MACI,KAAK,EAAC,sCADV;MAEI,IAAI,EAAC,UAFT;MAGI,IAAI,EAAC,UAHT;MAII,KAAK,EAAGH,IAAI,CAACI,QAJjB;MAKI,QAAQ,EAAGG,YALf;MAMI,KAAK,EAAIF,MAAM,CAACD;IANpB;MAAA;MAAA;MAAA;IAAA,QAfJ,eAuBI;MAAQ,IAAI,EAAC,QAAb;MACI,SAAS,EAAC,+BADd;MAEI,QAAQ,EAAE,CAACkB,OAFf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgCH,CApGD;;GAAMvB,Y;;KAAAA,Y;AAsGN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}