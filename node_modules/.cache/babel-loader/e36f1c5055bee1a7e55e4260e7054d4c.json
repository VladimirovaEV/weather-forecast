{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\weather-forecast\\\\src\\\\layout\\\\mainComponent.jsx\";\nimport React from \"react\";\nimport SearchForm from \"../components/searchForm\";\nimport ItemCardPage from \"../page/itemCardPage\";\nimport UseFetch from \"../hooks/useFetch\";\nimport { API_URL, API_KEY } from \"../utils/openWeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainComponent = () => {\n  const {\n    data,\n    error,\n    isloading,\n    setUrl\n  } = UseFetch();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      handleSearch: city => setUrl(`${API_URL}weather?q=${city}&appid=${API_KEY}&units=metric`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), data && /*#__PURE__*/_jsxDEV(ItemCardPage, {\n      dt: data.dt,\n      temp_min: data.main.temp_min,\n      temp_max: data.main.temp_max,\n      main: data.name,\n      country: data,\n      icon: data.weather[0].icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n\n_c = MainComponent;\nexport default MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","SearchForm","ItemCardPage","UseFetch","API_URL","API_KEY","MainComponent","data","error","isloading","setUrl","console","log","city","dt","main","temp_min","temp_max","name","weather","icon"],"sources":["C:/Users/Admin/weather-forecast/src/layout/mainComponent.jsx"],"sourcesContent":["import React from \"react\";\r\nimport SearchForm from \"../components/searchForm\";\r\nimport ItemCardPage from \"../page/itemCardPage\";\r\nimport UseFetch from \"../hooks/useFetch\";\r\nimport { API_URL, API_KEY } from \"../utils/openWeatherInfo\";\r\n\r\nconst MainComponent = () => {\r\n    const {data, error, isloading, setUrl} = UseFetch();\r\n    console.log(data)\r\n    return (\r\n    <>\r\n    <h1>Прогноз погоды</h1>\r\n    <SearchForm \r\n     handleSearch={(city) => setUrl(`${API_URL}weather?q=${city}&appid=${API_KEY}&units=metric`)}\r\n     />\r\n\r\n    {data && (<ItemCardPage \r\n        dt={data.dt}\r\n        temp_min={data.main.temp_min}\r\n        temp_max={data.main.temp_max}\r\n        main={data.name}\r\n        country={data}\r\n        icon={data.weather[0].icon}\r\n    />)}\r\n    </>\r\n    );\r\n};\r\n\r\nexport default MainComponent;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,0BAAjC;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EACxB,MAAM;IAACC,IAAD;IAAOC,KAAP;IAAcC,SAAd;IAAyBC;EAAzB,IAAmCP,QAAQ,EAAjD;EACAQ,OAAO,CAACC,GAAR,CAAYL,IAAZ;EACA,oBACA;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,UAAD;MACC,YAAY,EAAGM,IAAD,IAAUH,MAAM,CAAE,GAAEN,OAAQ,aAAYS,IAAK,UAASR,OAAQ,eAA9C;IAD/B;MAAA;MAAA;MAAA;IAAA,QAFA,EAMCE,IAAI,iBAAK,QAAC,YAAD;MACN,EAAE,EAAEA,IAAI,CAACO,EADH;MAEN,QAAQ,EAAEP,IAAI,CAACQ,IAAL,CAAUC,QAFd;MAGN,QAAQ,EAAET,IAAI,CAACQ,IAAL,CAAUE,QAHd;MAIN,IAAI,EAAEV,IAAI,CAACW,IAJL;MAKN,OAAO,EAAEX,IALH;MAMN,IAAI,EAAEA,IAAI,CAACY,OAAL,CAAa,CAAb,EAAgBC;IANhB;MAAA;MAAA;MAAA;IAAA,QANV;EAAA,gBADA;AAiBH,CApBD;;KAAMd,a;AAsBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}