{"ast":null,"code":"const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nexport function setTokens(_ref) {\n  let {\n    refreshToken,\n    idToken,\n    localId,\n    expiresIn = 3600\n  } = _ref;\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(TOKEN_KEY, idToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\n;\nexport function getAccessToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\n;\nexport function getRefreshToken() {\n  return localStorage.getItem(REFRESH_KEY);\n}\n;\nexport function getTokenExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY);\n}\n;\nconst localStorageService = {\n  setTokens,\n  getAccessToken,\n  getRefreshToken,\n  getTokenExpiresDate\n};\nexport default localStorageService;","map":{"version":3,"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","localStorageService"],"sources":["C:/Users/Admin/weather-forecast/src/services/localStorage.service.js"],"sourcesContent":["const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\n\r\nexport function setTokens({ refreshToken, idToken, localId, expiresIn = 3600 }) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(TOKEN_KEY, idToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n};\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n};\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n};\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n};\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate\r\n};\r\n\r\nexport default localStorageService;\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,OAAO,SAASC,SAAT,OAAyE;EAAA,IAAtD;IAAEC,YAAF;IAAgBC,OAAhB;IAAyBC,OAAzB;IAAkCC,SAAS,GAAG;EAA9C,CAAsD;EAC5E,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuBH,SAAS,GAAG,IAAvD;EACAI,YAAY,CAACC,OAAb,CAAqBZ,SAArB,EAAgCK,OAAhC;EACAM,YAAY,CAACC,OAAb,CAAqBX,WAArB,EAAkCG,YAAlC;EACAO,YAAY,CAACC,OAAb,CAAqBV,WAArB,EAAkCM,WAAlC;AACH;AAAA;AACD,OAAO,SAASK,cAAT,GAA0B;EAC7B,OAAOF,YAAY,CAACG,OAAb,CAAqBd,SAArB,CAAP;AACH;AAAA;AACD,OAAO,SAASe,eAAT,GAA2B;EAC9B,OAAOJ,YAAY,CAACG,OAAb,CAAqBb,WAArB,CAAP;AACH;AAAA;AACD,OAAO,SAASe,mBAAT,GAA+B;EAClC,OAAOL,YAAY,CAACG,OAAb,CAAqBZ,WAArB,CAAP;AACH;AAAA;AAED,MAAMe,mBAAmB,GAAG;EACxBd,SADwB;EAExBU,cAFwB;EAGxBE,eAHwB;EAIxBC;AAJwB,CAA5B;AAOA,eAAeC,mBAAf"},"metadata":{},"sourceType":"module"}