{"ast":null,"code":"export function validator(data, config) {\n  const errors = {};\n\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n\n    switch (validateMethod) {\n      case \"isRequired\":\n        {\n          if (typeof data === \"boolean\") {\n            statusValidate = !data;\n          } else {\n            statusValidate = data.trim() === \"\";\n          }\n\n          break;\n        }\n\n      case \"isEmail\":\n        {\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n          statusValidate = !emailRegExp.test(data);\n          break;\n        }\n\n      case \"isCapitalSymbol\":\n        {\n          const capitalRegExp = /[A-Z]+/g;\n          statusValidate = !capitalRegExp.test(data);\n          break;\n        }\n\n      case \"isContainDigit\":\n        {\n          const digitRegExp = /\\d+/g;\n          statusValidate = !digitRegExp.test(data);\n          break;\n        }\n\n      case \"min\":\n        {\n          statusValidate = data.length < config.value;\n          break;\n        }\n\n      default:\n        break;\n    }\n\n    if (statusValidate) return config.message;\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\n\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n\n  return errors;\n}","map":{"version":3,"names":["validator","data","config","errors","validate","validateMethod","statusValidate","trim","emailRegExp","test","capitalRegExp","digitRegExp","length","value","message","fieldName","error"],"sources":["C:/Users/Admin/weather-forecast/src/utils/validator.js"],"sourcesContent":["export function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n        case \"isRequired\": {\r\n            if (typeof data === \"boolean\") {\r\n                statusValidate = !data;\r\n            } else {\r\n                statusValidate = data.trim() === \"\";\r\n            }\r\n            break;\r\n        }\r\n        case \"isEmail\": {\r\n            const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n            statusValidate = !emailRegExp.test(data);\r\n            break;\r\n        }\r\n        case \"isCapitalSymbol\": {\r\n            const capitalRegExp = /[A-Z]+/g;\r\n            statusValidate = !capitalRegExp.test(data);\r\n            break;\r\n        }\r\n        case \"isContainDigit\": {\r\n            const digitRegExp = /\\d+/g;\r\n            statusValidate = !digitRegExp.test(data);\r\n            break;\r\n        }\r\n        case \"min\": {\r\n            statusValidate = data.length < config.value;\r\n            break;\r\n        }\r\n        default:\r\n            break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;EACpC,MAAMC,MAAM,GAAG,EAAf;;EACA,SAASC,QAAT,CAAkBC,cAAlB,EAAkCJ,IAAlC,EAAwCC,MAAxC,EAAgD;IAC5C,IAAII,cAAJ;;IACA,QAAQD,cAAR;MACA,KAAK,YAAL;QAAmB;UACf,IAAI,OAAOJ,IAAP,KAAgB,SAApB,EAA+B;YAC3BK,cAAc,GAAG,CAACL,IAAlB;UACH,CAFD,MAEO;YACHK,cAAc,GAAGL,IAAI,CAACM,IAAL,OAAgB,EAAjC;UACH;;UACD;QACH;;MACD,KAAK,SAAL;QAAgB;UACZ,MAAMC,WAAW,GAAG,iBAApB;UACAF,cAAc,GAAG,CAACE,WAAW,CAACC,IAAZ,CAAiBR,IAAjB,CAAlB;UACA;QACH;;MACD,KAAK,iBAAL;QAAwB;UACpB,MAAMS,aAAa,GAAG,SAAtB;UACAJ,cAAc,GAAG,CAACI,aAAa,CAACD,IAAd,CAAmBR,IAAnB,CAAlB;UACA;QACH;;MACD,KAAK,gBAAL;QAAuB;UACnB,MAAMU,WAAW,GAAG,MAApB;UACAL,cAAc,GAAG,CAACK,WAAW,CAACF,IAAZ,CAAiBR,IAAjB,CAAlB;UACA;QACH;;MACD,KAAK,KAAL;QAAY;UACRK,cAAc,GAAGL,IAAI,CAACW,MAAL,GAAcV,MAAM,CAACW,KAAtC;UACA;QACH;;MACD;QACI;IA7BJ;;IA+BA,IAAIP,cAAJ,EAAoB,OAAOJ,MAAM,CAACY,OAAd;EACvB;;EACD,KAAK,MAAMC,SAAX,IAAwBd,IAAxB,EAA8B;IAC1B,KAAK,MAAMI,cAAX,IAA6BH,MAAM,CAACa,SAAD,CAAnC,EAAgD;MAC5C,MAAMC,KAAK,GAAGZ,QAAQ,CAClBC,cADkB,EAElBJ,IAAI,CAACc,SAAD,CAFc,EAGlBb,MAAM,CAACa,SAAD,CAAN,CAAkBV,cAAlB,CAHkB,CAAtB;;MAKA,IAAIW,KAAK,IAAI,CAACb,MAAM,CAACY,SAAD,CAApB,EAAiC;QAC7BZ,MAAM,CAACY,SAAD,CAAN,GAAoBC,KAApB;MACH;IACJ;EACJ;;EACD,OAAOb,MAAP;AACH"},"metadata":{},"sourceType":"module"}