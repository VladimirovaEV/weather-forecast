{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\weather-forecast\\\\src\\\\layout\\\\selectedPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport UserProvider from \"../hooks/useUsers\";\nimport { useFavorite } from \"../hooks/useFavorite\";\nimport UseFetch from \"../hooks/useFetch\";\nimport { API_URL, API_KEY } from \"../utils/openWeatherInfo\";\nimport ItemCardFavorite from \"../page/itemCardFavorite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectedPage = () => {\n  _s();\n\n  const {\n    favorite\n  } = useFavorite();\n  const {\n    data,\n    setUrl\n  } = UseFetch();\n  console.log(favorite);\n  favorite.map(data => {\n    consolesetUrl(`${API_URL}weather?q=${data}&appid=${API_KEY}&units=metric`);\n    return result;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserProvider, {\n      children: data && favorite.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(ItemCardFavorite, {\n          dt: data.dt,\n          tempMin: data.main.temp_min,\n          tempMax: data.main.temp_max,\n          name: data.name,\n          country: data.sys.country,\n          icon: data.weather[0].icon,\n          wind: data.wind.speed,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelectedPage, \"kg2nnStrN0MnFPz7lM1dDPIpu4w=\", false, function () {\n  return [useFavorite];\n});\n\n_c = SelectedPage;\nexport default SelectedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedPage\");","map":{"version":3,"names":["React","UserProvider","useFavorite","UseFetch","API_URL","API_KEY","ItemCardFavorite","SelectedPage","favorite","data","setUrl","console","log","map","consolesetUrl","result","index","dt","main","temp_min","temp_max","name","sys","country","weather","icon","wind","speed"],"sources":["C:/Users/Admin/weather-forecast/src/layout/selectedPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport UserProvider from \"../hooks/useUsers\";\r\nimport { useFavorite } from \"../hooks/useFavorite\";\r\nimport UseFetch from \"../hooks/useFetch\";\r\nimport { API_URL, API_KEY } from \"../utils/openWeatherInfo\";\r\nimport ItemCardFavorite from \"../page/itemCardFavorite\";\r\n\r\nconst SelectedPage = () => {\r\n    const { favorite } = useFavorite();\r\n    const { data, setUrl } = UseFetch();\r\n    console.log(favorite);\r\n    favorite.map((data) => {\r\n        consolesetUrl(`${API_URL}weather?q=${data}&appid=${API_KEY}&units=metric`);\r\n       return result;\r\n    });\r\n    return (\r\n        <>\r\n            <UserProvider>\r\n                {/* <button\r\n                    type=\"button\"\r\n                    className=\"text-center btn btn-primary\"\r\n                    onClick={() => setUrl(`${API_URL}weather?q=${favorite}&appid=${API_KEY}&units=metric`)}\r\n                >\r\n                Посмотреть избранное\r\n                </button> */}\r\n                {data &&\r\n                    favorite.map((data, index) => {\r\n                        return (\r\n                                <ItemCardFavorite\r\n                                    dt={data.dt}\r\n                                    tempMin={data.main.temp_min}\r\n                                    tempMax={data.main.temp_max}\r\n                                    name={data.name}\r\n                                    country={data.sys.country}\r\n                                    icon={data.weather[0].icon}\r\n                                    wind={data.wind.speed}\r\n                                    data={data}\r\n                                />\r\n                        );\r\n                    })\r\n                }\r\n            </UserProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SelectedPage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,0BAAjC;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAAeN,WAAW,EAAhC;EACA,MAAM;IAAEO,IAAF;IAAQC;EAAR,IAAmBP,QAAQ,EAAjC;EACAQ,OAAO,CAACC,GAAR,CAAYJ,QAAZ;EACAA,QAAQ,CAACK,GAAT,CAAcJ,IAAD,IAAU;IACnBK,aAAa,CAAE,GAAEV,OAAQ,aAAYK,IAAK,UAASJ,OAAQ,eAA9C,CAAb;IACD,OAAOU,MAAP;EACF,CAHD;EAIA,oBACI;IAAA,uBACI,QAAC,YAAD;MAAA,UAQKN,IAAI,IACDD,QAAQ,CAACK,GAAT,CAAa,CAACJ,IAAD,EAAOO,KAAP,KAAiB;QAC1B,oBACQ,QAAC,gBAAD;UACI,EAAE,EAAEP,IAAI,CAACQ,EADb;UAEI,OAAO,EAAER,IAAI,CAACS,IAAL,CAAUC,QAFvB;UAGI,OAAO,EAAEV,IAAI,CAACS,IAAL,CAAUE,QAHvB;UAII,IAAI,EAAEX,IAAI,CAACY,IAJf;UAKI,OAAO,EAAEZ,IAAI,CAACa,GAAL,CAASC,OALtB;UAMI,IAAI,EAAEd,IAAI,CAACe,OAAL,CAAa,CAAb,EAAgBC,IAN1B;UAOI,IAAI,EAAEhB,IAAI,CAACiB,IAAL,CAAUC,KAPpB;UAQI,IAAI,EAAElB;QARV;UAAA;UAAA;UAAA;QAAA,QADR;MAYH,CAbD;IATR;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AA6BH,CArCD;;GAAMF,Y;UACmBL,W;;;KADnBK,Y;AAuCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}