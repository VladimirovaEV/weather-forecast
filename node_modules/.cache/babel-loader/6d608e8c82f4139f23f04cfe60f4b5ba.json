{"ast":null,"code":"import axios from \"axios\";\nimport configFile from \"../utils/config.json\";\nimport { toast } from \"react-toastify\";\nimport { httpAuth } from \"../hooks/useAuth\";\nconst http = axios.create({\n  baseURL: configFile.apiEndpoint\n});\nhttp.interceptors.request.use(function (config) {\n  if (configFile.isFireBase) {\n    const containSlash = /\\/$/gi.test(config.url);\n    config.url = (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n    const expiresDate = localStorageService.getTokenExpiresDate();\n    const refreshToken = localStorageService.getRefreshToken();\n\n    if (refreshToken && expiresDate < Date.now()) {\n      grant_type: \"refresh_token\", refresh;\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\nfunction transformData(data) {\n  return data && !data._id ? Object.keys(data).map(key => ({ ...data[key]\n  })) : data;\n}\n\nhttp.interceptors.response.use(res => {\n  if (configFile.isFireBase) {\n    res.data = {\n      content: transformData(res.data)\n    };\n  }\n\n  return res;\n}, function (error) {\n  const expectedErrors = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedErrors) {\n    console.log(error);\n    toast.error(\"Something was wrong. Try it later\");\n  }\n\n  return Promise.reject(error);\n});\nconst httpService = {\n  get: http.get,\n  post: http.post,\n  put: http.put,\n  delete: http.delete\n};\nexport default httpService;","map":{"version":3,"names":["axios","configFile","toast","httpAuth","http","create","baseURL","apiEndpoint","interceptors","request","use","config","isFireBase","containSlash","test","url","slice","expiresDate","localStorageService","getTokenExpiresDate","refreshToken","getRefreshToken","Date","now","grant_type","refresh","error","Promise","reject","transformData","data","_id","Object","keys","map","key","response","res","content","expectedErrors","status","console","log","httpService","get","post","put","delete"],"sources":["C:/Users/Admin/weather-forecast/src/services/http.service.js"],"sourcesContent":["import axios from \"axios\";\r\nimport configFile from \"../utils/config.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport { httpAuth } from \"../hooks/useAuth\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndpoint\r\n});\r\nhttp.interceptors.request.use(\r\n    function (config) {\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url = (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n            const expiresDate = localStorageService.getTokenExpiresDate();\r\n            const refreshToken = localStorageService.getRefreshToken();\r\n            if(refreshToken && expiresDate < Date.now()) {\r\n                grant_type: \"refresh_token\",\r\n                refresh\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nfunction transformData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n            ...data[key]\r\n        }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Something was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete\r\n};\r\n\r\nexport default httpService;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,IAAI,GAAGJ,KAAK,CAACK,MAAN,CAAa;EACtBC,OAAO,EAAEL,UAAU,CAACM;AADE,CAAb,CAAb;AAGAH,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CACI,UAAUC,MAAV,EAAkB;EACd,IAAIV,UAAU,CAACW,UAAf,EAA2B;IACvB,MAAMC,YAAY,GAAG,QAAQC,IAAR,CAAaH,MAAM,CAACI,GAApB,CAArB;IACAJ,MAAM,CAACI,GAAP,GAAa,CAACF,YAAY,GAAGF,MAAM,CAACI,GAAP,CAAWC,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAAH,GAA6BL,MAAM,CAACI,GAAjD,IAAwD,OAArE;IACA,MAAME,WAAW,GAAGC,mBAAmB,CAACC,mBAApB,EAApB;IACA,MAAMC,YAAY,GAAGF,mBAAmB,CAACG,eAApB,EAArB;;IACA,IAAGD,YAAY,IAAIH,WAAW,GAAGK,IAAI,CAACC,GAAL,EAAjC,EAA6C;MACzCC,UAAU,EAAE,iBACZC,OADY;IAEf;EACJ;;EACD,OAAOd,MAAP;AACH,CAbL,EAcI,UAAUe,KAAV,EAAiB;EACb,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAhBL;;AAkBA,SAASG,aAAT,CAAuBC,IAAvB,EAA6B;EACzB,OAAOA,IAAI,IAAI,CAACA,IAAI,CAACC,GAAd,GACDC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,GAAlB,CAAuBC,GAAD,KAAU,EAC9B,GAAGL,IAAI,CAACK,GAAD;EADuB,CAAV,CAAtB,CADC,GAIDL,IAJN;AAKH;;AACD1B,IAAI,CAACI,YAAL,CAAkB4B,QAAlB,CAA2B1B,GAA3B,CACK2B,GAAD,IAAS;EACL,IAAIpC,UAAU,CAACW,UAAf,EAA2B;IACvByB,GAAG,CAACP,IAAJ,GAAW;MAAEQ,OAAO,EAAET,aAAa,CAACQ,GAAG,CAACP,IAAL;IAAxB,CAAX;EACH;;EACD,OAAOO,GAAP;AACH,CANL,EAOI,UAAUX,KAAV,EAAiB;EACb,MAAMa,cAAc,GAChBb,KAAK,CAACU,QAAN,IACAV,KAAK,CAACU,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAd,KAAK,CAACU,QAAN,CAAeI,MAAf,GAAwB,GAH5B;;EAIA,IAAI,CAACD,cAAL,EAAqB;IACjBE,OAAO,CAACC,GAAR,CAAYhB,KAAZ;IACAxB,KAAK,CAACwB,KAAN,CAAY,mCAAZ;EACH;;EACD,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAjBL;AAmBA,MAAMiB,WAAW,GAAG;EAChBC,GAAG,EAAExC,IAAI,CAACwC,GADM;EAEhBC,IAAI,EAAEzC,IAAI,CAACyC,IAFK;EAGhBC,GAAG,EAAE1C,IAAI,CAAC0C,GAHM;EAIhBC,MAAM,EAAE3C,IAAI,CAAC2C;AAJG,CAApB;AAOA,eAAeJ,WAAf"},"metadata":{},"sourceType":"module"}